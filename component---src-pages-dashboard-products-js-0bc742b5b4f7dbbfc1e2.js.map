{"version":3,"file":"component---src-pages-dashboard-products-js-0bc742b5b4f7dbbfc1e2.js","mappings":"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","sources":["webpack://atlas-website/./src/dashboardImages/products-pic.svg","webpack://atlas-website/./src/pages/dashboard/products.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/products-pic-553bb766bb645f98bc3545b0118e0e3d.svg\";","import React, { useState } from 'react'\r\nimport LayoutDashboard from '../bcomponets/LayoutDashboard/LayoutDashboard'\r\nimport productsPic from '../../dashboardImages/products-pic.svg'\r\nimport BoxDb from '../bcomponets/UI/BoxDb/BoxDb'\r\nimport IECircle from '../bcomponets/UI/IECircle/IECircle'\r\nimport YECircle from '../bcomponets/UI/YECircle/YECircle'\r\nimport LoadPic from '../../dashboardImages/load-pic.svg'\r\nimport InfoPic from '../../dashboardImages/info-pic.svg'\r\nimport GraphSite from '../bcomponets/UI/GraphSite/GraphSite'\r\nimport arrow from '../../dashboardImages/arrow-blue.svg'\r\nimport {BsArrowRight} from 'react-icons/bs'\r\nimport GraphTime from '../bcomponets/UI/GraphTime/GraphTime'\r\n\r\nconst graphOT = [\r\n  {\r\n    name: 'January',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${15 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '5kg'\r\n  },\r\n  {\r\n    name: 'February',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${15 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '5kg'\r\n  }, \r\n  {\r\n    name: 'March',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'April',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'May',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'June',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'July',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'August',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'September',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n]\r\n\r\nconst graphS = [\r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${15 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '5kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n]\r\n\r\nconst text = [\r\n  {\r\n    number: 2,\r\n    name: \"Textiles Recycling\",\r\n    buttons: [\r\n      {\r\n        span: \"Change to\",\r\n        button: \"Octopus Energy\",\r\n        num: 1,\r\n        description: 'Estimated Cost: £1,000 per annum',\r\n        circles: {\r\n          circle1: {\r\n            number: 2000,\r\n            width: 116 + ((500 - 400)/100 * 1.1), //вмсето 500 должно быть то же значение что и в number\r\n          },\r\n          circle2: {\r\n            number: 500,\r\n            width1: 116 + ((2000 - 400)/100 * 1.1), //вмсето 500 должно быть то же значение что и в number\r\n            width2: 150\r\n          }\r\n        }\r\n      },\r\n      {\r\n        span: \"Change to\",\r\n        button: \"Octopus Energy\",\r\n        num: 2,\r\n        description: 'Estimated Cost: £1,000 per annum',\r\n        circles: {\r\n          circle1: {\r\n            number: 4000,\r\n            width1: 116 + ((500 - 400)/100 * 1.1),\r\n          },\r\n          circle2: {\r\n            number: 500,\r\n            width1: 116 + ((4000 - 400)/100 * 1.1), //for emissions\r\n            width2: 200 //for benchmark\r\n          }\r\n        }\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    number: 3,\r\n    name: \"Textiles Recycling\",\r\n    buttons: [\r\n      {\r\n        span: \"Change to\",\r\n        button: \"Octopus Energy\",\r\n        num: 3,\r\n        description: 'Estimated Cost: £1,000 per annum',\r\n        circles: {\r\n          circle1: {\r\n            width: 147,\r\n            number: 500\r\n          },\r\n          circle2: {\r\n            width1: 137,\r\n            number: 500,\r\n            width2: 140\r\n          }\r\n        }\r\n      },\r\n      {\r\n        span: \"Change to\",\r\n        button: \"Octopus Energy\",\r\n        num: 4,\r\n        description: 'Estimated Cost: £1,000 per annum',\r\n        circles: {\r\n          circle1: {\r\n            width: 127,\r\n            number: 500\r\n          },\r\n          circle2: {\r\n            width1: 137,\r\n            number: 500,\r\n            width2: '200px'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n  }\r\n]\r\n\r\nexport default function Products() {\r\n  const [boxTextActive, setboxTextActive] = useState(2);\r\n  const [circle, setCircle] = useState(text[0].buttons[0].num);\r\n  const [drop, setDrop] = useState(false);\r\n  const [site, setSite] = useState('HTL'); //HTL == highest to lowest LTH == lowest to highest\r\n  const [siteChoice,setSiteChoice] = useState(''); //seiteChoice - выбранный сайт в серчбоксе\r\n  console.log(siteChoice)\r\n\r\n  return (\r\n    <LayoutDashboard name={'Products Dashboard'}>\r\n        <div className='db-container-content'>\r\n            <div className='db-header'>\r\n                <img src={productsPic} alt=\"\" />\r\n                <h1>PRODUCTS</h1>\r\n                <img src={productsPic} alt=\"\" />\r\n            </div>\r\n            <div className='boxes-container'>\r\n              <BoxDb>\r\n                <h3><span>Suggested</span> solutions</h3>\r\n                <div className='box-content'>\r\n                    <div className=\"box-sollutions-content\">\r\n                        <div className=\"box-sollutions-content__text\">\r\n\r\n                          {/*butttons  and subcontent*/}\r\n                          {\r\n                            text.map(item => {\r\n                            return (\r\n                                      <div className='box-buttons'>\r\n\r\n                                        <button className={`buttonDb ${boxTextActive == item.number ? 'box-btn__active' : ''}`} \r\n                                                onClick={() => {setboxTextActive(item.number); setCircle(item.buttons[0].num)}}>\r\n                                          <div />\r\n                                          {item.name}\r\n                                        </button>\r\n                                            {\r\n                                              item.buttons.map(button => {\r\n                                              return (  \r\n                                                      <p style={{display: boxTextActive == item.number ? \"block\" : \"none\"}}>\r\n                                                        <div>\r\n                                                          <span>{button.span}</span>\r\n                                                          {/*butttons  that changes the circle*/}\r\n                                                          <button className='buttonDb' onClick={() => setCircle(button.num)}>{button.button}</button>\r\n                                                          {/*butttons  that changes the circle*/}\r\n                                                        </div>\r\n                                                        {button.description}\r\n                                                      </p>\r\n                                                      )\r\n                                              })\r\n                                            }\r\n                                        </div>\r\n                                      )\r\n                                    })\r\n                                  }\r\n                              {/*butttons and subcontent*/}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              </BoxDb>\r\n              <BoxDb>\r\n                <button className='buttonDb'><img src={InfoPic} alt=\"info-pic\" /></button>\r\n                <button className='buttonDb'><img src={LoadPic} alt=\"load-pic\" /></button>\r\n                <h3><span>Emmisions</span> benchmark</h3>\r\n                <div className='box-content'>\r\n                      <div className='box-circles-content'>\r\n                        <div className='emissions-content emissions-content1'>\r\n                              <p>Industry <br /> Benchmark</p>\r\n                              <IECircle Width={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle1.width} \r\n                                        Number={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle1.number}\r\n                              />\r\n                              <div className='emissions-description'>\r\n                                <div className='emissions-description-item emissions-description-item-1'>\r\n                                    <div />\r\n                                    <p>net emissions</p>\r\n                                </div>\r\n                              </div>\r\n                        </div>\r\n                        <div className='emissions-content emissions-content2'>\r\n                        <p>Your<br /> Emissions</p>\r\n                          <YECircle \r\n                                  Widt1={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle2.width1} \r\n                                  Width2={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle2.width2}\r\n                                  Number={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle2.number} \r\n                          />\r\n                              <div className='emissions-description'>\r\n                                <div className='emissions-description-item emissions-description-item-1'>\r\n                                    <div />\r\n                                    <p>net emissions</p>\r\n                                </div>\r\n                                <div className='emissions-description-item emissions-description-item-2'>\r\n                                    <div />\r\n                                    <p>net reduction</p>\r\n                                </div>\r\n                              </div>\r\n                        </div>\r\n                      </div>\r\n                </div>\r\n              </BoxDb>\r\n              <BoxDb>\r\n                <h3><span>Emissions</span> by site</h3>\r\n                <div className='box-content'>\r\n                    <div className='box-ems-content'>\r\n                      <div className='box-ems-content__graphs'>\r\n                        <div className='box-ems-content__graphs__nav'>\r\n                          <div className='box-ems-content__graphs__nav__search'>\r\n                              <input type=\"text\" onChange={(e) => setSiteChoice(e.target.value)} placeholder=\"Search by Site...\"/>\r\n                          </div>\r\n                          <div className='box-ems-content__graphs__nav__dropdown'>\r\n                            <button className='buttonDb' onClick={() => setDrop(!drop)}><img src={arrow} alt=\"\" />{site === 'HTL' ? 'Rank Highest to Lowest' : 'Rank Lowest to Highest'}</button>\r\n                            <div style={ drop ? {display: 'block'}:{}}>\r\n                              <button className='buttonDb' onClick={() => {setSite('HTL'); setDrop(!drop)}}>Rank Highest to Lowest</button>\r\n                              <button className='buttonDb' onClick={() => {setSite('LTH'); setDrop(!drop)}}>Rank Lowest to Highest</button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                          <div className='box-ems-content__graphs__line'/>\r\n                          <div className='box-ems-content__graphs__items'>\r\n                                  {\r\n                                    graphS.map(gr => {\r\n                                      return(\r\n                                        <GraphSite GRSWidth1={gr.width1} GRSWidth2={gr.width2} Name={gr.name} Kg={gr.kg} />\r\n                                      )\r\n                                    })\r\n                                  }\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n              </BoxDb>\r\n              <BoxDb>\r\n                <div className='over-time-header'>\r\n                    <h3><span>Suggested</span> solutions</h3>\r\n                    <button className='buttonDb'>Monthly<BsArrowRight/></button> \r\n                </div>\r\n                <div className='box-content last-box'>\r\n                  <div className='graphsOT'>\r\n                      <div className=\"graphsOT__graphs\">\r\n                          {\r\n                            graphOT.map(gr => {\r\n                              return(\r\n                                <GraphTime GRSWidth1={gr.width1} GRSWidth2={gr.width2} Name={gr.name.split('')[0]} Kg={gr.kg} />\r\n                              )\r\n                            })\r\n                          }\r\n                      </div>\r\n                      <div className='graphsOT__line' />\r\n                  </div>\r\n                </div>\r\n              </BoxDb>\r\n            </div>\r\n        </div>\r\n    </LayoutDashboard>\r\n  )\r\n}\r\n"],"names":["graphOT","name","width1","width2","kg","graphS","text","number","buttons","span","button","num","description","circles","circle1","width","circle2","Products","useState","boxTextActive","setboxTextActive","circle","setCircle","drop","setDrop","site","setSite","siteChoice","setSiteChoice","console","log","LayoutDashboard","className","src","productsPic","alt","BoxDb","map","item","onClick","style","display","InfoPic","LoadPic","IECircle","Width","find","x","Number","YECircle","Widt1","Width2","type","onChange","e","target","value","placeholder","arrow","gr","GraphSite","GRSWidth1","GRSWidth2","Name","Kg","GraphTime","split"],"sourceRoot":""}