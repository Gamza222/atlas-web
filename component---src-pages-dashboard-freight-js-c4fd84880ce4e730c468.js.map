{"version":3,"file":"component---src-pages-dashboard-freight-js-c4fd84880ce4e730c468.js","mappings":"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","sources":["webpack://atlas-website/./src/dashboardImages/freight-pic.svg","webpack://atlas-website/./src/pages/dashboard/freight.js","webpack://atlas-website/./src/dashboardImages/energy/install-pic.svg","webpack://atlas-website/./src/dashboardImages/energy/switch-pic.svg"],"sourcesContent":["export default __webpack_public_path__ + \"static/freight-pic-1d89282538539222412059720c72bd5c.svg\";","import React, { useState } from 'react'\r\nimport LayoutDashboard from '../bcomponets/LayoutDashboard/LayoutDashboard'\r\nimport freightPic from '../../dashboardImages/freight-pic.svg'\r\nimport BoxDb from '../bcomponets/UI/BoxDb/BoxDb'\r\nimport IECircle from '../bcomponets/UI/IECircle/IECircle'\r\nimport YECircle from '../bcomponets/UI/YECircle/YECircle'\r\nimport LoadPic from '../../dashboardImages/load-pic.svg'\r\nimport InfoPic from '../../dashboardImages/info-pic.svg'\r\nimport GraphSite from '../bcomponets/UI/GraphSite/GraphSite'\r\nimport arrow from '../../dashboardImages/arrow-blue.svg'\r\nimport {BsArrowRight} from 'react-icons/bs'\r\nimport GraphTime from '../bcomponets/UI/GraphTime/GraphTime'\r\nimport { totalSubsidy } from '../bcomponets/LayoutDashboard/LayoutDashboard'\r\nimport switchPic from '../../dashboardImages/energy/switch-pic.svg'\r\nimport installPic from '../../dashboardImages/energy/install-pic.svg'\r\n\r\nconst graphOT = [\r\n  {\r\n    name: 'January',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${15 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '5kg'\r\n  },\r\n  {\r\n    name: 'February',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${15 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '5kg'\r\n  }, \r\n  {\r\n    name: 'March',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'April',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'May',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'June',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'July',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'August',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'September',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n]\r\n\r\nconst graphS = [\r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${15 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '5kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n  {\r\n    name: 'Chiswick',\r\n    width1: '60%', //нужно точно знать как это строится\r\n    width2: `${28 + ((5 / 5) * 2)}%`, //нужно точно знать как это строится\r\n    kg: '10kg'\r\n  }, \r\n]\r\n\r\nconst text = [\r\n  {\r\n    number: 2,\r\n    name: \"Switch to Renewable Energy\",\r\n    pic: switchPic,\r\n    buttons: [\r\n      {\r\n        span: \"Change to\",\r\n        button: \"Octopus Energy:\",\r\n        num: 1,\r\n        description: 'monthly estimate',\r\n        span2: '£531,11',\r\n        circles: {\r\n          circle1: {\r\n            number: 2000,\r\n            width: 116 + ((500 - 400)/100 * 1.1), //вмсето 500 должно быть то же значение что и в number\r\n          },\r\n          circle2: {\r\n            number: 500,\r\n            width1: 116 + ((2000 - 400)/100 * 1.1), //вмсето 500 должно быть то же значение что и в number\r\n            width2: 150\r\n          }\r\n        }\r\n      },\r\n      {\r\n        span: \"Change to\",\r\n        button: \"Octopus Energy:\",\r\n        num: 2,\r\n        description: 'annual estimate',\r\n        span2: '£627.02' ,\r\n        circles: {\r\n          circle1: {\r\n            number: 4000,\r\n            width1: 116 + ((500 - 400)/100 * 1.1),\r\n          },\r\n          circle2: {\r\n            number: 500,\r\n            width1: 116 + ((4000 - 400)/100 * 1.1), //for emissions\r\n            width2: 200 //for benchmark\r\n          }\r\n        }\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    number: 3,\r\n    name: \"Install Smart Meter\",\r\n    pic: installPic,\r\n    buttons: [\r\n      {\r\n        span: \"Change to\",\r\n        button: \"British Gas:\",\r\n        num: 3,\r\n        description: 'annual estimate',\r\n        span2: '£627.02' ,\r\n        circles: {\r\n          circle1: {\r\n            width: 147,\r\n            number: 500\r\n          },\r\n          circle2: {\r\n            width1: 137,\r\n            number: 500,\r\n            width2: 140\r\n          }\r\n        }\r\n      },\r\n      {\r\n        span: \"Change to\",\r\n        button: \"Octopus Energy:\",\r\n        num: 4,\r\n        description: 'monthly estimate',\r\n        span2: \"£531,11\",\r\n        circles: {\r\n          circle1: {\r\n            width: 127,\r\n            number: 500\r\n          },\r\n          circle2: {\r\n            width1: 137,\r\n            number: 500,\r\n            width2: '200px'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n  },\r\n]\r\n\r\nexport default function Freight() {\r\n  const [boxTextActive, setboxTextActive] = useState(2);\r\n  const [circle, setCircle] = useState(text[0].buttons[0].num);\r\n  const [drop, setDrop] = useState(false);\r\n  const [site, setSite] = useState('HTL'); //HTL == highest to lowest LTH == lowest to highest\r\n  const [siteChoice,setSiteChoice] = useState(''); //seiteChoice - выбранный сайт в серчбоксе\r\n  console.log(siteChoice)\r\n\r\n  return (\r\n    <LayoutDashboard name={'Freight'} pic={freightPic}>\r\n        <div className='db-container-content'>\r\n            <div className='db-header'>\r\n            </div>\r\n            <div className='boxes-container'>\r\n            <BoxDb>\r\n                <h3>Suggested solutions</h3>\r\n                <div className='box-content'>\r\n                    <div className=\"box-sollutions-content\">\r\n                        <div className=\"box-sollutions-content__text\">\r\n                          \r\n                          <div className=\"subsidy\">\r\n                            <p>Total subsidy for reduction solutions: </p>\r\n                            <span>{`£${totalSubsidy}`}</span>\r\n                            <button className='buttonDb'><img src={InfoPic} alt=\"\" /></button>\r\n                          </div>\r\n\r\n                          {/*butttons  and subcontent*/}\r\n                          {\r\n                            text.map(item => {\r\n                            return (\r\n                                      <div className='box-buttons'>\r\n\r\n                                        <button className={`buttonDb ${boxTextActive == item.number ? 'box-btn__active' : ''}`} \r\n                                                onClick={() => {setboxTextActive(item.number); setCircle(item.buttons[0].num)}}>\r\n                                          <div />\r\n                                          {item.name}\r\n                                          <img src={item.pic} alt=\"\" />\r\n                                        </button>\r\n                                            <div>\r\n                                            {\r\n                                              item.buttons.map(button => {\r\n                                              return (  \r\n                                                        <div style={{display: boxTextActive == item.number ? \"flex\" : \"none\"}}>\r\n                                                        <p>\r\n                                                          <div>\r\n                                                            <span>{button.span}</span>\r\n                                                            {/*butttons  that changes the circle*/}\r\n                                                            <button className='buttonDb' onClick={() => setCircle(button.num)}>{button.button}</button>\r\n                                                            {/*butttons  that changes the circle*/}\r\n                                                          </div>\r\n                                                          <span>{button.span2}</span>\r\n                                                          {button.description}\r\n                                                        </p>\r\n                                                        <button className='buttonDb'>Go to site</button>\r\n                                                      </div>\r\n                                                      )\r\n                                              })\r\n                                            }\r\n                                            </div>\r\n                                        </div>\r\n                                      )\r\n                                    })\r\n                                  }\r\n                              {/*butttons and subcontent*/}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              </BoxDb>\r\n              <BoxDb>\r\n                <button className='buttonDb'><img src={InfoPic} alt=\"info-pic\" /></button>\r\n                <button className='buttonDb'><img src={LoadPic} alt=\"load-pic\" /></button>\r\n                <h3><span>Emmisions</span> benchmark</h3>\r\n                <div className='box-content'>\r\n                      <div className='box-circles-content'>\r\n                        <div className='emissions-content emissions-content1'>\r\n                              <p>Industry <br /> Benchmark</p>\r\n                              <IECircle Width={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle1.width} \r\n                                        Number={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle1.number}\r\n                              />\r\n                              <div className='emissions-description'>\r\n                                <div className='emissions-description-item emissions-description-item-1'>\r\n                                    <div />\r\n                                    <p>net emissions</p>\r\n                                </div>\r\n                              </div>\r\n                        </div>\r\n                        <div className='emissions-content emissions-content2'>\r\n                        <p>Your<br /> Emissions</p>\r\n                          <YECircle \r\n                                  Widt1={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle2.width1} \r\n                                  Width2={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle2.width2}\r\n                                  Number={text.find(x => x.number == boxTextActive).buttons.find(x => x.num == circle).circles.circle2.number} \r\n                          />\r\n                              <div className='emissions-description'>\r\n                                <div className='emissions-description-item emissions-description-item-1'>\r\n                                    <div />\r\n                                    <p>net emissions</p>\r\n                                </div>\r\n                                <div className='emissions-description-item emissions-description-item-2'>\r\n                                    <div />\r\n                                    <p>net reduction</p>\r\n                                </div>\r\n                              </div>\r\n                        </div>\r\n                      </div>\r\n                </div>\r\n              </BoxDb>\r\n              <BoxDb>\r\n                <h3><span>Emissions</span> by store</h3>\r\n                <div className='box-content'>\r\n                    <div className='box-ems-content'>\r\n                      <div className='box-ems-content__graphs'>\r\n                        <div className='box-ems-content__graphs__nav'>\r\n                          <div className='box-ems-content__graphs__nav__search'>\r\n                              <input type=\"text\" onChange={(e) => setSiteChoice(e.target.value)} placeholder=\"Search by Site...\"/>\r\n                          </div>\r\n                          <div className='box-ems-content__graphs__nav__dropdown'>\r\n                            <button className='buttonDb' onClick={() => setDrop(!drop)}><img src={arrow} alt=\"\" />{site === 'HTL' ? 'Rank Highest to Lowest' : 'Rank Lowest to Highest'}</button>\r\n                            <div style={ drop ? {display: 'block'}:{}}>\r\n                              <button className='buttonDb' onClick={() => {setSite('HTL'); setDrop(!drop)}}>Rank Highest to Lowest</button>\r\n                              <button className='buttonDb' onClick={() => {setSite('LTH'); setDrop(!drop)}}>Rank Lowest to Highest</button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                          <div className='box-ems-content__graphs__line'/>\r\n                          <div className='box-ems-content__graphs__items'>\r\n                                  {\r\n                                    graphS.map(gr => {\r\n                                      return(\r\n                                        <GraphSite GRSWidth1={gr.width1} GRSWidth2={gr.width2} Name={gr.name} Kg={gr.kg} />\r\n                                      )\r\n                                    })\r\n                                  }\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n              </BoxDb>\r\n              <BoxDb>\r\n                <div className='over-time-header'>\r\n                    <h3>Emmisions by <span>month</span></h3>\r\n                    <button className='buttonDb'>Monthly<BsArrowRight/></button> \r\n                </div>\r\n                <div className='box-content last-box'>\r\n                  <div className='graphsOT'>\r\n                      <div className=\"graphsOT__graphs\">\r\n                          {\r\n                            graphOT.map(gr => {\r\n                              return(\r\n                                <GraphTime GRSWidth1={gr.width1} GRSWidth2={gr.width2} Name={gr.name.split('')[0]} Kg={gr.kg} />\r\n                              )\r\n                            })\r\n                          }\r\n                      </div>\r\n                      <div className='graphsOT__line' />\r\n                  </div>\r\n                </div>\r\n              </BoxDb>\r\n            </div>\r\n        </div>\r\n    </LayoutDashboard>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/install-pic-85624d476305c8f9497c44778a2663b4.svg\";","export default __webpack_public_path__ + \"static/switch-pic-9bc12621aa812f14912d0f09c60ef5f2.svg\";"],"names":["graphOT","name","width1","width2","kg","graphS","text","number","pic","switchPic","buttons","span","button","num","description","span2","circles","circle1","width","circle2","installPic","Freight","useState","boxTextActive","setboxTextActive","circle","setCircle","drop","setDrop","site","setSite","siteChoice","setSiteChoice","console","log","LayoutDashboard","freightPic","className","BoxDb","totalSubsidy","src","InfoPic","alt","map","item","onClick","style","display","LoadPic","IECircle","Width","find","x","Number","YECircle","Widt1","Width2","type","onChange","e","target","value","placeholder","arrow","gr","GraphSite","GRSWidth1","GRSWidth2","Name","Kg","GraphTime","split"],"sourceRoot":""}