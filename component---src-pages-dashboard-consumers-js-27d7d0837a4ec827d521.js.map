{"version":3,"file":"component---src-pages-dashboard-consumers-js-27d7d0837a4ec827d521.js","mappings":"sLAGe,SAASA,EAAaC,GAEnC,OADAC,QAAQC,IAAIF,EAAMG,SAEhB,uBAAKC,UCLiB,4CDMjBJ,EAAMK,YACP,yBAAIL,EAAMG,SACV,yBAAIH,EAAMM,eACTN,EAAMO,SACP,yBAAIP,EAAMQ,U,0FEXlB,EAAe,IAA0B,4D,8BCOnCC,EAAY,CACd,kBACA,kBACA,mBAGEC,EAAU,CACZ,mBACA,mBACA,sBAGEC,EAAO,CACT,CACIC,KAAM,0CAAqB,uCAC3BC,MAAO,QACPC,MAAO,kBACPC,SAAU,2CAAsB,mDAChCC,MAAO,UAOA,SAASC,IACxB,OAA0BC,EAAAA,EAAAA,WAAS,GAA5BC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAA1BG,EAAP,KAAaC,EAAb,KAEA,GAAwCJ,EAAAA,EAAAA,WAAS,GAA1CK,EAAP,KAAqBC,EAArB,KACA,GAA4BN,EAAAA,EAAAA,UAASR,EAAQ,IAAtCe,EAAP,KAAeC,EAAf,KACA,GAAgCR,EAAAA,EAAAA,UAAS,GAAlCS,EAAP,KAAiBC,EAAjB,KAKE,OAFF3B,QAAQC,IAAI2B,GAGR,gBAACC,EAAA,QAAD,CAAiBC,KAAM,YAAaC,IAAKH,GACrC,uBAAKzB,UAAU,wBACX,uBAAKA,UAAU,uBAGX,wBAAM6B,OAAO,GAAG7B,UAAS,qBAAsBe,EAAQ,UAAY,KAC/D,gBAAC,MAAD,MACA,yBAAOe,KAAK,OAAO9B,UAAU,0BAA0B+B,QAAS,kBAAMf,GAAS,IAAOgB,OAAQ,kBAAMhB,GAAS,MAC7G,yBAAOc,KAAK,SAASG,QAAM,KAK/B,uBAAKjC,UAAU,oBACX,uBAAKA,UAAU,0BACX,oCAEA,0BAAQA,UAAU,0CAA0CkC,QAAS,kBAAMhB,GAASD,KAApF,IAAgGI,EAAhG,IAA0G,uBAAKc,IAAKC,EAAAA,EAAOC,IAAI,WAE/H,uBAAKrC,UAAS,iCAAkCiB,EAAO,qCAAuC,KACzFX,EAAQgC,KAAI,SAAAjB,GACT,OAAO,0BAAQrB,UAAU,gDAAgDkC,QAAS,WAAOZ,EAAUD,GAASH,GAASD,KAASI,QAI1I,uBAAKrB,UAAU,0BACX,4CAEA,0BAAQA,UAAU,0CAA0CkC,QAAS,kBAAMd,GAAiBD,KAA5F,IAAgHI,EAAhH,IAA4H,uBAAKY,IAAKC,EAAAA,EAAOC,IAAI,WAEjJ,uBAAKrC,UAAS,iCAAkCmB,EAAe,qCAAuC,KACjGd,EAAUiC,KAAI,SAAAf,GACX,OAAO,0BAAQvB,UAAU,gDAAgDkC,QAAS,WAAOV,EAAYD,GAAWH,GAAiBD,KAAiBI,QAI9J,uBAAKvB,UAAU,gCACX,2CAAkB,0CAM1B,uBAAKA,UAAU,kBACX,4DACA,uBAAKA,UAAU,0BACP,yCACA,uCACA,2CACA,qCACA,mCAER,uBAAKA,UAAU,2BAEVO,EAAK+B,KAAI,SAAAC,GACN,OACI,gBAAC5C,EAAA,QAAD,CACAM,YAAasC,EAAK/B,KAClBT,QAASwC,EAAK9B,MACdP,cAAeqC,EAAK7B,MACpBP,SAAUoC,EAAK5B,SACfP,MAAOmC,EAAK3B","sources":["webpack://atlas-website/./src/pages/bcomponets/UI/ConsumersItem/ConsumerItem.jsx","webpack://atlas-website/./src/pages/bcomponets/UI/ConsumersItem/ConsumerItem.module.scss","webpack://atlas-website/./src/dashboardImages/consumers-pic.svg","webpack://atlas-website/./src/pages/dashboard/consumers.js"],"sourcesContent":["import React from 'react'\r\nimport * as classes from './ConsumerItem.module.scss'\r\n\r\nexport default function ConsumerItem(props) {\r\n  console.log(props.OrderNo);\r\n  return (\r\n    <div className={classes.ConsumerItem}>\r\n        {props.OrderPlaced}\r\n        <p>{props.OrderNo}</p>\r\n        <p>{props.StoreLocation}</p>\r\n        {props.Customer}\r\n        <p>{props.Value}</p>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var ConsumerItem = \"ConsumerItem-module--ConsumerItem--L5tor\";","export default __webpack_public_path__ + \"static/consumers-pic-25b086e565e88f0dd12083e6b7101d61.svg\";","import React, {useState} from 'react'\r\nimport LayoutDashboard from '../bcomponets/LayoutDashboard/LayoutDashboard'\r\nimport consumersPic from '../../dashboardImages/consumers-pic.svg'\r\nimport { CgSearch } from 'react-icons/cg'\r\nimport arrow from '../../dashboardImages/arrow-blue.svg'\r\nimport ConsumerItem from '../bcomponets/UI/ConsumersItem/ConsumerItem'\r\n\r\nconst locations = [\r\n    'Mike’s Chiswick',\r\n    'Mike’s Chiswick',\r\n    'Mike’s Chiswick',\r\n];\r\n\r\nconst periods = [\r\n    '1 June - 31 June',\r\n    '1 July - 31 July',\r\n    '1 July - 31 August',\r\n]\r\n\r\nconst data = [\r\n    {\r\n        date: <p>{`27th May, 2022`}<span>{`1.03pm`}</span></p>,\r\n        order: '#1234',\r\n        store: 'Mike’s Chiswick',\r\n        customer: <p>{`Hailee Peterson`}<span>{`Hailee.p@gmail.com`}</span></p>,\r\n        value: '£7.55'\r\n    }\r\n    \r\n];\r\n\r\n    \r\n\r\nexport default function Consumers() {\r\nconst [focus, setFocus] = useState(false);\r\nconst [menu, setMenu] = useState(false);\r\n\r\nconst [menuLocation, setMenuLocation] = useState(false);\r\nconst [period, setPeriod] = useState(periods[0]);\r\nconst [location, setLocation] = useState(0);\r\n\r\n\r\nconsole.log(consumersPic)\r\n\r\n  return (\r\n    <LayoutDashboard name={'Consumers'} pic={consumersPic}>\r\n        <div className='db-container-content'>\r\n            <div className='consumers-container'>\r\n\r\n                {/*Input form*/}\r\n                <form action=\"\" className={`consumers-search ${focus ? 'isFocus' : ''}`}>\r\n                    <CgSearch />\r\n                    <input type=\"text\" className='consumers-search__input' onFocus={() => setFocus(true)} onBlur={() => setFocus(false)}/>\r\n                    <input type=\"submit\" hidden/>\r\n                </form>\r\n                {/*Input form*/}\r\n\r\n                {/*filter*/}\r\n                <div className='consumers-filter'>\r\n                    <div className='consumers-filter__item'>\r\n                        <p>Period:</p>\r\n\r\n                        <button className='buttonDb consumers-filter__item__button' onClick={() => setMenu(!menu)}>{`(${period})`}<img src={arrow} alt=\"arrow\" /></button>\r\n\r\n                        <div className={`consumers-filter__item__list ${menu ? 'consumer-filter__item__list-active' : '' }`}>\r\n                            {periods.map(period => {\r\n                                return <button className='buttonDb consumers-filter__item__list__button' onClick={() => {setPeriod(period); setMenu(!menu)}}>{period}</button>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className='consumers-filter__item'>\r\n                        <p>Store Location:</p>\r\n\r\n                        <button className='buttonDb consumers-filter__item__button' onClick={() => setMenuLocation(!menuLocation)}>{`(${location})`}<img src={arrow} alt=\"arrow\" /></button>\r\n\r\n                        <div className={`consumers-filter__item__list ${menuLocation ? 'consumer-filter__item__list-active' : '' }`}>\r\n                            {locations.map(location => {\r\n                                return <button className='buttonDb consumers-filter__item__list__button' onClick={() => {setLocation(location); setMenuLocation(!menuLocation)}}>{location}</button>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className='consumers-filter__item-price'>\r\n                        <p>Total revenue: <span>£150.00</span></p>\r\n                    </div>\r\n                </div>\r\n                {/*filter*/}\r\n\r\n                {/*list*/}\r\n                <div className='consumers-list'>\r\n                    <p>Table Available only on desctop</p>\r\n                    <div className='consumers-list__header'>\r\n                            <p>Order Placed</p>\r\n                            <p>Order No. </p>\r\n                            <p>Store Location</p>\r\n                            <p>Customer</p>\r\n                            <p>Value</p>\r\n                    </div>\r\n                    <div className='consumers-list__content'>\r\n\r\n                        {data.map(elem => {\r\n                            return (\r\n                                <ConsumerItem \r\n                                OrderPlaced={elem.date}\r\n                                OrderNo={elem.order}\r\n                                StoreLocation={elem.store}\r\n                                Customer={elem.customer}\r\n                                Value={elem.value}\r\n                            />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                {/*list*/}\r\n            </div>\r\n        </div>\r\n    </LayoutDashboard>\r\n  )\r\n}\r\n"],"names":["ConsumerItem","props","console","log","OrderNo","className","OrderPlaced","StoreLocation","Customer","Value","locations","periods","data","date","order","store","customer","value","Consumers","useState","focus","setFocus","menu","setMenu","menuLocation","setMenuLocation","period","setPeriod","location","setLocation","consumersPic","LayoutDashboard","name","pic","action","type","onFocus","onBlur","hidden","onClick","src","arrow","alt","map","elem"],"sourceRoot":""}